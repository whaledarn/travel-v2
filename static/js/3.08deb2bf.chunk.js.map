{"version":3,"sources":["components/CardGrid.module.css","components/BasicCard.js","components/CardGrid.js","pages/View.js","churchConstants.js"],"names":["module","exports","grid","flex","but","BasicCard","props","react","Card","sx","minWidth","style","display","justifyContent","flexDirection","width","CardContent","Typography","fontSize","gutterBottom","constants","church","time","variant","component","firstName","lastName","mb","color","notes","Divider","riderslist","map","rider","key","_id","content","i","quantity","length","push","getEmpty","CardGrid","className","classes","Grid","container","spacing","alignItems","items","loading_default","a","driver","item","xs","sm","md","riders","filter","el","View","_useState","useState","_useState2","Object","slicedToArray","drivers","setDrivers","_useState3","_useState4","setRiders","_fetchList","asyncToGenerator","_regeneratorRuntime","mark","_callee","response","data","wrap","_context","prev","next","fetch","mode","sent","json","stop","apply","this","arguments","useEffect","fetchList","react_default","createElement","__webpack_require__","d","__webpack_exports__","churches","times"],"mappings":"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","file":"static/js/3.08deb2bf.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid\":\"CardGrid_grid__229YI\",\"flex\":\"CardGrid_flex__1Iq_R\",\"but\":\"CardGrid_but__11wr-\"};","import * as React from \"react\";\nimport {Card, CardContent, Typography, Divider} from \"@mui/material\";\nimport * as constants from \"../churchConstants.js\";\n\nexport default function BasicCard(props) {\n  function getEmpty() {\n    let content = [];\n    for (let i = 0; i < props.quantity - props.riderslist.length; i++) {\n      content.push(\n        <React.Fragment key={i}>\n        <Typography variant=\"h6\" component=\"div\">\n          <b>Open Seat</b>\n        </Typography>\n        <Divider></Divider>\n      </React.Fragment>\n      );\n    }\n    return content;\n  }\n\n  return (\n    <Card\n    \n      sx={{ minWidth: 275 }}\n      style={{\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        flexDirection: \"column\",\n        width: \"100%\",\n      }}\n    >\n      <CardContent>\n        <Typography sx={{ fontSize: 20 }} gutterBottom>\n          {constants.churches[props.church]} @{\" \"}\n          {constants.times[props.church][props.time]}\n        </Typography>\n        <Typography variant=\"h5\" component=\"div\">\n          {props.firstName + \" \" + props.lastName}\n        </Typography>\n        <Typography sx={{ mb: 1.5 }} color=\"text.secondary\">\n          {props.notes}\n        </Typography>\n        <Divider></Divider>\n        {props.riderslist.map((rider) => (\n          <React.Fragment key={rider._id}>\n            \n            <Typography variant=\"h6\" component=\"div\">\n              {rider.firstName} {rider.lastName}\n            </Typography>\n            <Divider></Divider>\n          </React.Fragment>\n        ))}\n        {getEmpty()}\n      </CardContent>\n    </Card>\n  );\n}\n","import * as React from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport BasicCard from \"./BasicCard\";\nimport Loading from \"react-simple-loading\";\n\nimport classes from \"./CardGrid.module.css\";\n\nexport default function CardGrid(props) {\n  return (\n    <div className={classes.grid}>\n      <h2>View Current Signups</h2>\n      <Grid\n        className={classes.flex}\n        container\n        spacing={2}\n        justifyContent=\"flex-start\"\n        alignItems=\"stretch\"\n      >\n        {props.items.length === 0 ? (\n          <Loading />\n        ) : (\n          props.items.map((driver) => (\n            <Grid key={driver._id} item xs={12} sm={6} md={4} style={{ display: \"flex\" }}>\n              <BasicCard\n                firstName={driver.firstName}\n                lastName={driver.lastName}\n                notes={driver.notes}\n                quantity={driver.quantity}\n                riderslist={props.riders.filter((el) => {\n                  return el.driver === driver._id;\n                })}\n                church={driver.church}\n                time={driver.time}\n              />\n            </Grid>\n          ))\n        )}\n      </Grid>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport CardGrid from \"../components/CardGrid\";\n\nconst View = () => {\n  const [drivers, setDrivers] = useState([]);\n  const [riders, setRiders] = useState([]);\n\n  useEffect(() => {\n    fetchList();\n  },[]);\n\n\n\n  async function fetchList() {\n\n      let response = await fetch(\"https://whispering-eyrie-86232.herokuapp.com/drivers\", {\n        mode: \"cors\",\n      });\n      let data = await response.json();\n      setDrivers(data);\n\n      response = await fetch(\"https://whispering-eyrie-86232.herokuapp.com/riders\", {\n        mode: \"cors\",\n      });\n      data = await response.json();\n      setRiders(data);\n      }\n\n  return <CardGrid \n  items={drivers}\n  riders={riders}/>;\n};\n\nexport default View;\n","export const churches = [\"Church 1\", \"Church 2\", \"Church 3\", \"Church 4\"];\nexport const times = [[\"Time 1\", \"Time 2\"],[\"Time 3\"],[\"Time 4\", \"Time 5\", \"Time 6\"],[\"Time 7\", \"Time 8\"]];"],"sourceRoot":""}